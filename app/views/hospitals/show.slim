- disable_header_margin()

- unless @hospital.approved?
  .alert.alert-info
    .container
      .text-center
        span
          - if @hospital.pending?
            = t('.pending_notice')
          - elsif @hospital.rejected?
            = t('.rejected_notice')

.hospital-header.mb-3
  .container.pt-4
    h2= @hospital.name

    ul.nav.nav-tabs
      li.nav-item= hospital_nav_link("overview")
      li.nav-item= hospital_nav_link("departments")
      li.nav-item= hospital_nav_link("employees")
      /li.nav-item= hospital_nav_link("acceptance_state")

.container
  - case @tab
  - when "overview"
    .row
      .col-sm-8
        .card.mb-3
          .card-header.bg-primary.text-light
            strong.lead= @hospital.name
          .card-body
            strong= t(".info.creator")
            div= @hospital.user

            hr

            strong= t(".info.address")
            div= @hospital.address.street
            div= "#{@hospital.address.zip_code} #{@hospital.address.city}"
            div= @hospital.country.name

      .col-sm-4
        .card.mb-3
          .card-header.bg-primary.text-light
            strong.lead= t(".stats.title")
          .card-body.card-table
            table.table
              tr
                th= t('.stats.num_patients')
                td= @hospital.patient_count
              tr
                th= t('.stats.num_employees')
                td= @hospital.employee_count

  - when "departments"
    - unless @hospital.departments.any?
      p
        = t('hospitals.show.no_departments')
        - if @hospital.approved?
          = link_to "Create?", new_hospital_department_path(@hospital)
    - else
      - if @hospital.approved?
        .text-center= link_to t('hospitals.show.create_new_department'), new_hospital_department_path(@hospital), class: 'btn btn-outline-primary mb-3'
      - @hospital.departments.each do |department|
        .card.mb-3
          .card-header.bg-primary.text-light
            strong.lead= "#{department.name}"
            .float-right
              .btn-group
                - unless current_user.is_employed_in?(department)
                  = simple_form_for([@hospital, department, Employee.new], method: :post) do |f|
                    = f.hidden_field :department_id, value: department.id
                    = f.button :submit, t('hospitals.show.check_into_department'), class: 'btn btn-success btn-sm'
                - else
                  = simple_form_for([@hospital, department, current_user.employement_for(department)], method: :delete) do |f|
                    = f.hidden_field :department_id, value: department.id
                    = f.button :submit, t('hospitals.show.check_out_of_department'), class: 'btn btn-danger btn-sm'
          .card-body.department-patients
            - unless current_user.is_employed_in?(department)
              table.table.table-striped
                tr
                  th.text-center
                    p= t('.not_employed_in_department')
            - else
              table.table.table-striped
                tr
                  th= t('patients.index.uti_ssi.table.id')
                  th= t('patients.index.uti_ssi.table.initials')
                  th= t('patients.index.uti_ssi.table.locked')
                  th
                - if department.patients.within_study_iteration(current_study_iteration).any?
                  - department.patients.within_study_iteration(current_study_iteration).each do |patient|
                    tr
                      td[style="width:5%;"]= patient.id
                      td[style="width:5%;"]= patient.initial
                      td.text-center[style="width:5%;"]= patient_lock_button(patient)
                      td.text-center[style="width:75%;"]= t('.edit_on_patients_page_html', patients_page: patients_path)
  - when "employees"
    .card.mb-3
      .card-header.bg-primary.text-light
        strong.lead= t('.employees_table.title')
      .card-body.card-table
        table.table.table-striped
          tr
            th= t('.employees_table.id')
            th= t('.employees_table.name')
            th= t('.employees_table.departments')
          - @users_employed.each do |user|
            tr
              td= user.id
              td= user.to_s
              td= user.departments.where(hospital_id: @hospital.id).order("name ASC").pluck(:name).join(", ")
