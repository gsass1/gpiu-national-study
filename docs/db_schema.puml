@startuml

skinparam componentStyle uml2
'skinparam monochrome true
'skinparam linetype ortho

class User  {
    id
    first_name
    last_name
    title
    suffix
    country_id
    email
    encrypted_password

    reset_password_token
    reset_password_sent_at
    remember_created_at
    sign_in_count
    current_sign_in_at
    last_sign_in_at
    current_sign_in_ip
    last_sign_in_ip

    created_at
    updated_at
    discarded_at
}

class Hospital  {
    id
    name
    country_id
    address_id

    created_at
    updated_at
    discarded_at
}

class Country  {
    id
    iso_2
    iso_3
    name

    created_at
    updated_at
}

class Address  {
    id
    street
    zip_code
    city

    created_at
    updated_at
    discarded_at
}

class Role  {
    id
    name
    resource_type
    resource_id

    created_at
    updated_at
}

class Employee  {
    id
    department_id
    user_id

    created_at
    updated_at
}

class Department  {
    id
    hospital_id
    name

    dept_questionnaire_state

    created_at
    updated_at
    discarded_at
}

class StudyRange {
    id
    start
    end
    comment
    discarded_at
}

class StudyIteration {
    id
    name
    country_id
    acceptance_state: enum
    (States: Pending, accepted, declined)
}

class Patient {
    id
    initial
    department_id
    creator_id
    study_iteration_id
    patient_type: enum

    patient_identification_state
    patient_uti_state
    patient_ssi_state

    patient_prostate_biopsy_questionnaire_state
    patient_prostate_biopsy_outcome_questionnaire_state

    created_at
    updated_at
    discarded_at
}

class PatientIdentification {
    id
    patient_id
    birth_year
    sex: enum
    pregnancy: bool
    admission_date
    admission_infection: enum
    infection_type: enum
    created_at
    updated_at
    discarded_at
}

class SupportRequest {
    id
    user_id

    message
    sender_email
    done

    created_at
    updated_at

    (Maybe use GitLab API
    to create Issues)
}

class Notification {
    id
    recipient_id
    actor_id
    read_at
    action
    notifiable_id
    notifiable_type
}

class DepartmentQuestionnaire {
    id
    department_id
    study_iteration_id

    created_at
    updated_at

    (All the questionnaires answers
    See GPIU ESIU Study Platform)
}

class UtiSsiQuestionnaire {
    id
    patient_id
    type
}

class UtiQuestionnaire {
}

class SsiQuestionnaire {
}

class BiopsyQuestionnaire {
    id
    patient_id
}

class BiopsyOutcomeQuestionnaire {
    id
    patient_id
}

User "*" -- "*" Role : "roles\nusers"
User "1" -- "*" Employee : "employed\nuser"
User "1" -- "*" Patient

Hospital "1" -- "1" Address : "address\nhospital"
Hospital "*" -- "1" Country : "country\nhospital"
Hospital "1" -- "*" Department : "departments\nhospital"

Country -- "*" Role : "Role in\nCountry"

Employee -- "1" Department : "department"

StudyIteration "*" -- "1" Country : Periods in which\nthe study is active
StudyRange "*" -- "1" StudyIteration

Patient "*" -- "1" Department
Patient "*" -- "1" StudyIteration
Patient "1" -- "1" PatientIdentification
Patient "1" -- "0,2" UtiSsiQuestionnaire
Patient "1" -- "0,1" BiopsyQuestionnaire
Patient "1" -- "0,2" BiopsyOutcomeQuestionnaire

UtiSsiQuestionnaire <|-- UtiQuestionnaire
UtiSsiQuestionnaire <|-- SsiQuestionnaire

SupportRequest "*" -- "1" User

DepartmentQuestionnaire "*" -- "1" StudyIteration
DepartmentQuestionnaire "*" -- "1" Department

User "1" -- "*" Notification : "actor\nnotification"
User "1" -- "*" Notification : "recipient\nnotification"
@enduml

